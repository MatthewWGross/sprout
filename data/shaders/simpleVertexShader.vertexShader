#version 330 core

// Input vertex data, different for all executions of this shader.
layout(location = 0) in vec3 vertexPosition_modelspace;
layout(location = 1) in vec2 uvCoords;
layout(location = 2) in vec3 normals;

// Values that stay constant for the whole mesh.
uniform mat4 MVP;
uniform mat4 V;
uniform mat4 M;
uniform vec3 LightPosition_worldspace;

out vec2 texCoords;
out vec3 position_worldspace;
out vec3 normal_camspace;
out vec3 eyedir_camspace;
out vec3 lightdir_camspace;



void main()
{
	// Output position of the vertex, in clip space : MVP * position
	gl_Position =  MVP * vec4(vertexPosition_modelspace,1);
	position_worldspace = (M*vec4(vertexPosition_modelspace, 1)).xyz;

	vec3 vertexpos_camspace = (V*M*vec4(vertexPosition_modelspace,1)).xyz;
	eyedir_camspace = vec3(0,0,0)-vertexpos_camspace;

	vec3 lightpos_camspace = (V*vec4(LightPosition_worldspace,1)).xyz;
	lightdir_camspace = lightpos_camspace + eyedir_camspace;
	normal_camspace = (V * M * vec4(normals,0)).xyz;
	
	texCoords = uvCoords;
}